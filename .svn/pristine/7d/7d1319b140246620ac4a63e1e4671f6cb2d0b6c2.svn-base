package cn.com.phhc.drugSafeApp.drugRemind;

import android.app.AlertDialog;
import android.app.DialogFragment;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.RelativeLayout;
import android.widget.TextView;

import cn.com.phhc.drugSafeApp.R;
import cn.com.phhc.drugSafeApp.myAccount.InputRelaxTimeFragment;
import cn.com.phhc.drugSafeApp.utils.App;
import cn.com.phhc.drugSafeApp.utils.CreateSQLiteDatabase;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.protocol.HTTP;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

/**
 * Created by lenovo on 2015/2/27.
 */
public class ConfirmTakeDrugMemberRelaxTimeDialogFragment extends DialogFragment {

    ProgressDialog progressDialog;
    CreateSQLiteDatabase databaseHelper;
    SQLiteDatabase db;
    String databaseName;
    ConfirmInterface listener;
    RelativeLayout wakeUp, breakfast, lunch, dinner, sleep;
    TextView save, wakeUpTime, breakfastTime, lunchTime, dinnerTime, sleepTime, takeDrugMemberName;
    String wakeUpTime_database, breakfastTime_database, lunchTime_database, dinnerTime_database, sleepTime_database, itemName, currentMemberName;
    Boolean flag1 = false, flag2 = false, flag3 = false, flag4 = false;

    //定制fragmentDialog弹出动作
    @Override
    public void onActivityCreated(Bundle arg0) {
        super.onActivityCreated(arg0);
        getDialog().getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;
    }

    public static ConfirmTakeDrugMemberRelaxTimeDialogFragment newInstance(String sex) {
        ConfirmTakeDrugMemberRelaxTimeDialogFragment frag = new ConfirmTakeDrugMemberRelaxTimeDialogFragment();
        Bundle args = new Bundle();
        args.putString("sex", sex);
        frag.setArguments(args);
        return frag;
    }

    public interface ConfirmInterface {
        public void onConfirmInterface(String left, String right);
    }

    public void setConfirmInterface(ConfirmInterface listener) {
        this.listener = listener;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        // TODO Auto-generated method stub

        databaseName = "LocalDrugMessage";
        databaseHelper = new CreateSQLiteDatabase(getActivity(), databaseName, null, 1);
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

        View rootView = inflater.inflate(R.layout.confirm_take_drug_member_relax_time_dialog, container, false);

        currentMemberName = getArguments().getString("name");
        getDialog().setCanceledOnTouchOutside(false);
        getDialog().requestWindowFeature(Window.FEATURE_NO_TITLE);
        Window window = getDialog().getWindow();
        window.setGravity(Gravity.BOTTOM);
        //查数据库去初始化有关视图
        String sql = "select * from MemberInfoTable where name ='" + currentMemberName + "'";
        db = databaseHelper.getWritableDatabase();
        Cursor cursor = db.rawQuery(sql, null);
        while (cursor.moveToNext()) {
            wakeUpTime_database = cursor.getString(7);
            breakfastTime_database = cursor.getString(8);
            lunchTime_database = cursor.getString(9);
            dinnerTime_database = cursor.getString(10);
            sleepTime_database = cursor.getString(11);
        }
        db.close();
        //当前服药人的名字
        takeDrugMemberName = (TextView) rootView.findViewById(R.id.takeDrugMemberName);
        takeDrugMemberName.setText("请先确认[" + currentMemberName + "]的作息时间");
        //保存
        save = (TextView) rootView.findViewById(R.id.save);
        save.setOnClickListener(new MyClickSaveListener());
        //起床
        wakeUp = (RelativeLayout) rootView.findViewById(R.id.wakeUp);
        wakeUp.setOnClickListener(new MyClickWakeUpListener());
        wakeUpTime = (TextView) rootView.findViewById(R.id.wakeUpTime);
        wakeUpTime.setText(wakeUpTime_database);
        //早餐
        breakfast = (RelativeLayout) rootView.findViewById(R.id.breakfast);
        breakfast.setOnClickListener(new MyClickBreakfastListener());
        breakfastTime = (TextView) rootView.findViewById(R.id.breakfastTime);
        breakfastTime.setText(breakfastTime_database);
        //午餐
        lunch = (RelativeLayout) rootView.findViewById(R.id.lunch);
        lunch.setOnClickListener(new MyClickLunchListener());
        lunchTime = (TextView) rootView.findViewById(R.id.lunchTime);
        lunchTime.setText(lunchTime_database);
        //晚餐
        dinner = (RelativeLayout) rootView.findViewById(R.id.dinner);
        dinner.setOnClickListener(new MyClickDinnerListener());
        dinnerTime = (TextView) rootView.findViewById(R.id.dinnerTime);
        dinnerTime.setText(dinnerTime_database);
        //睡觉
        sleep = (RelativeLayout) rootView.findViewById(R.id.sleep);
        sleep.setOnClickListener(new MyClickSleepListener());
        sleepTime = (TextView) rootView.findViewById(R.id.sleepTime);
        sleepTime.setText(sleepTime_database);

        return rootView;
    }

    @Override
    public void onPause() {
        super.onPause();
    }

    @Override
    public void onResume() {
        super.onResume();
    }

    @Override
    public void onStop() {
        super.onStop();
    }

    //点击保存作息时间监视器 尼见 2015-03-27
    class MyClickSaveListener implements View.OnClickListener {

        @Override
        public void onClick(View v) {

            //判断早餐时间是否大于起床时间
            if (wakeUpTime_database.compareTo(breakfastTime_database) >= 1) {
                getActivity().runOnUiThread(new Runnable() {
                    public void run() {
                        AlertDialog dialog = getAlertDialogWithBreakfastTimeBiggerThanWakeupTime();
                        dialog.show();
                    }
                });
                return;
            }

            //判断午餐时间是否大于早餐时间
            if (breakfastTime_database.compareTo(lunchTime_database) >= 1) {
                getActivity().runOnUiThread(new Runnable() {
                    public void run() {
                        AlertDialog dialog = getAlertDialogWithLunchTimeBiggerThanBreakfastTime();
                        dialog.show();
                    }
                });
                return;
            }

            //判断晚餐时间是否大于午餐时间
            if (lunchTime_database.compareTo(dinnerTime_database) >= 1) {
                getActivity().runOnUiThread(new Runnable() {
                    public void run() {
                        AlertDialog dialog = getAlertDialogWithDinnerTimeBiggerThanLunchTime();
                        dialog.show();
                    }
                });
                return;
            }

            //判断睡觉时间是否大于晚餐时间
            if (dinnerTime_database.compareTo(sleepTime_database) >= 1) {
                getActivity().runOnUiThread(new Runnable() {
                    public void run() {
                        AlertDialog dialog = getAlertDialogWithSleepTimeBiggerDinnerTime();
                        dialog.show();
                    }
                });
                return;
            }

            //判断作息时间是否规律
            String a[] = wakeUpTime_database.split(":");
            int hour1 = Integer.parseInt(a[0]);
            int minute1 = Integer.parseInt(a[1]);
            int num1 = hour1 * 100 + minute1;
            String b[] = breakfastTime_database.split(":");
            int hour2 = Integer.parseInt(b[0]);
            int minute2 = Integer.parseInt(b[1]);
            int num2 = hour2 * 100 + minute2;
            String c[] = lunchTime_database.split(":");
            int hour3 = Integer.parseInt(c[0]);
            int minute3 = Integer.parseInt(c[1]);
            int num3 = hour3 * 100 + minute3;
            String d[] = dinnerTime_database.split(":");
            int hour4 = Integer.parseInt(d[0]);
            int minute4 = Integer.parseInt(d[1]);
            int num4 = hour4 * 100 + minute4;
            String e[] = sleepTime_database.split(":");
            int hour5 = Integer.parseInt(e[0]);
            int minute5 = Integer.parseInt(e[1]);
            int num5 = hour5 * 100 + minute5;
            int result1 = num2 - num1;
            int result2 = num3 - num2;
            int result3 = num4 - num3;
            int result4 = num5 - num4;

            if (result1 >= 15 && result1 <= 200) {
                flag1 = true;
            }

            if (result2 >= 300 && result2 <= 600) {
                flag2 = true;
            }

            if (result3 >= 400 && result3 <= 800) {
                flag3 = true;
            }

            if (result4 >= 200) {
                flag4 = true;
            }
            if (flag1 && flag2 && flag3 && flag4) {

                progressDialog = ProgressDialog.show(getActivity(), null, "数据加载中，请稍后...");
                new ModifyMemberRelaxTime().execute();

            } else {
                flag1 = false;
                flag2 = false;
                flag3 = false;
                flag4 = false;
                getActivity().runOnUiThread(new Runnable() {
                    public void run() {
                        AlertDialog dialog = getAlertDialogWithUseDefaultOrSave();
                        dialog.show();
                    }
                });
            }
        }
    }

    //在工作线程中修改成员作息时间 尼见 2015-03-30
    class ModifyMemberRelaxTime extends AsyncTask<Object, Object, Object> {

        @Override
        protected Objects doInBackground(Object... params) {

            //调用生成用药时间点接口 尼见 2015-03-27
            //声明网址字符串
            App app = (App) getActivity().getApplication();
            String uriAPI2 = app.getInterfaceUrl() + "guarder/api/user/SaveRest";
            HttpPost httpRequest2 = new HttpPost(uriAPI2);
            List<NameValuePair> params2 = new ArrayList<NameValuePair>();
            //获取当前时间
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            Date curDate = new Date(System.currentTimeMillis());
            String localTimeStamp = formatter.format(curDate);
            db = databaseHelper.getWritableDatabase();
            String sql = "select * from MemberInfoTable where name='" + currentMemberName + "'";
            Cursor cursor = db.rawQuery(sql, null);
            String memberID = null;
            while (cursor.moveToNext()) {
                memberID = cursor.getString(0);
            }
            params2.add(new BasicNameValuePair("restTime", "[{" + "\"getup\":\"07:00\",\"breakfast\":\"07:30\",\"lunch\":\"12:00\",\"supper\":\"19:00\",\"sleep\":\"21:00\",\"sysuserID\":\"" + memberID + "\"" + "}]"));
            try {
                //发出http request
                httpRequest2.setEntity(new UrlEncodedFormEntity(params2, HTTP.UTF_8));
                //取得http response
                HttpResponse httpResponse2 = new DefaultHttpClient().execute(httpRequest2);
                //若状态码为200 ok
                if (httpResponse2.getStatusLine().getStatusCode() == 200) {
                    String strResult2 = EntityUtils.toString(httpResponse2.getEntity());
                    JSONObject jsonObject2 = new JSONObject(strResult2);
                    //成功接受到服务器数据，结束等待框
                    progressDialog.dismiss();
                    db = databaseHelper.getWritableDatabase();
                    String sql2 = "update MemberInfoTable set getup ='" + wakeUpTime_database + "' , breakfast ='" + breakfastTime_database + "' , lunch ='" + lunchTime_database + "' , dinner ='" + dinnerTime_database + "' , sleep ='" + sleepTime_database + "' where name ='" + currentMemberName + "'";
                    db.execSQL(sql2);
                    flag1 = false;
                    flag2 = false;
                    flag3 = false;
                    flag4 = false;
                    getActivity().runOnUiThread(new Runnable() {
                        public void run() {
                            AlertDialog dialog = getAlertDialogWithSaveSuccess();
                            dialog.show();
                        }
                    });
                    db.close();
                }
            } catch (Exception e) {
                System.out.println(e);
            }

            return null;
        }
    }

    //保存作息时间成功提示 尼见 2015-03-27
    AlertDialog getAlertDialogWithSaveSuccess() {

        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(),
                android.app.AlertDialog.THEME_DEVICE_DEFAULT_LIGHT);

        builder.setTitle("提示");
        builder.setMessage("保存用户作息时间成功");
        builder.setPositiveButton("确定", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                dismiss();
                SelectAddDrugMethodDialogFragment selectAddDrugMethodDialogFragment = new SelectAddDrugMethodDialogFragment();
                selectAddDrugMethodDialogFragment.show(getActivity().getFragmentManager(), "selectAddDrugMethodDialogFragment");
            }
        });
        builder.setCancelable(false);
        android.app.AlertDialog dialog = builder.create();
        return dialog;

    }

    //使用默认时间或者仍然保存 尼见 2015-03-27
    AlertDialog getAlertDialogWithUseDefaultOrSave() {

        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(),
                android.app.AlertDialog.THEME_DEVICE_DEFAULT_LIGHT);

        builder.setMessage("作息时间不规律，建议使用默认设置");
        builder.setPositiveButton("继续保存", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                //加载等待框
                progressDialog = ProgressDialog.show(getActivity(), null, "数据加载中，请稍后...");
                new ModifyMemberRelaxTime().execute();
                db = databaseHelper.getWritableDatabase();
                String sql = "update MemberInfoTable set getup ='" + wakeUpTime_database + "' , breakfast ='" + breakfastTime_database + "' , lunch ='" + lunchTime_database + "' , dinner ='" + dinnerTime_database + "' , sleep ='" + sleepTime_database + "' where name ='" + currentMemberName + "'";
                db.execSQL(sql);
                db.close();
                dismiss();
                SelectAddDrugMethodDialogFragment selectAddDrugMethodDialogFragment = new SelectAddDrugMethodDialogFragment();
                selectAddDrugMethodDialogFragment.setConfirmInterface(new SelectAddDrugMethodDialogFragment.ConfirmInterface() {
                    @Override
                    public void onConfirmInterface(String method) {

                    }
                });
                selectAddDrugMethodDialogFragment.show(getActivity().getFragmentManager(), "selectAddDrugMethodDialogFragment");
            }
        });
        builder.setNegativeButton("使用默认", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                wakeUpTime.setText("07:00");
                breakfastTime.setText("07:30");
                lunchTime.setText("12:00");
                dinnerTime.setText("18:00");
                sleepTime.setText("22:00");
                wakeUpTime_database = "07:00";
                breakfastTime_database = "07:30";
                lunchTime_database = "12:00";
                dinnerTime_database = "18:00";
                sleepTime_database = "22:00";
            }
        });
        builder.setCancelable(false);
        android.app.AlertDialog dialog = builder.create();
        return dialog;

    }

    //早餐时间不能早于起床时间 尼见 2015-03-27
    AlertDialog getAlertDialogWithBreakfastTimeBiggerThanWakeupTime() {


        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(),
                android.app.AlertDialog.THEME_DEVICE_DEFAULT_LIGHT);

        builder.setTitle("提示");
        builder.setMessage("早餐时间不能早于起床时间");
        builder.setPositiveButton("确定", null);
        builder.setCancelable(false);
        android.app.AlertDialog dialog = builder.create();
        return dialog;

    }

    //午餐时间不能早于早餐时间 尼见 2015-03-27
    AlertDialog getAlertDialogWithLunchTimeBiggerThanBreakfastTime() {


        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(),
                android.app.AlertDialog.THEME_DEVICE_DEFAULT_LIGHT);

        builder.setTitle("提示");
        builder.setMessage("午餐时间不能早于早餐时间");
        builder.setPositiveButton("确定", null);
        builder.setCancelable(false);
        android.app.AlertDialog dialog = builder.create();
        return dialog;

    }

    //晚餐时间不能早于午餐时间 尼见 2015-03-27
    AlertDialog getAlertDialogWithDinnerTimeBiggerThanLunchTime() {


        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(),
                android.app.AlertDialog.THEME_DEVICE_DEFAULT_LIGHT);

        builder.setTitle("提示");
        builder.setMessage("晚餐时间不能早于午餐时间");
        builder.setPositiveButton("确定", null);
        builder.setCancelable(false);
        android.app.AlertDialog dialog = builder.create();
        return dialog;

    }

    //睡觉时间不能早于晚餐时间 尼见 2015-03-27
    AlertDialog getAlertDialogWithSleepTimeBiggerDinnerTime() {


        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(),
                android.app.AlertDialog.THEME_DEVICE_DEFAULT_LIGHT);

        builder.setTitle("提示");
        builder.setMessage("睡觉时间不能早于晚餐时间");
        builder.setPositiveButton("确定", null);
        builder.setCancelable(false);
        android.app.AlertDialog dialog = builder.create();
        return dialog;

    }

    //点击起床监视器 尼见 2015-03-27
    class MyClickWakeUpListener implements View.OnClickListener {

        @Override
        public void onClick(View v) {
            InputRelaxTimeFragment inputRelaxTimeFragment = InputRelaxTimeFragment.newInstance(01, 01);
            inputRelaxTimeFragment.setConfirmInterface(new InputRelaxTimeFragment.ConfirmInterface() {

                //接口回调实现通信
                @Override
                public void onConfirmInterface(int hour, int minute) {
                    String minute_show = "00";
                    String hour_show = "00";
                    if (minute <= 9) {
                        minute_show = "0" + minute;
                    } else {
                        minute_show = Integer.toString(minute);
                    }
                    if (hour <= 9) {
                        hour_show = "0" + hour;
                    } else {
                        hour_show = Integer.toString(hour);
                    }
                    wakeUpTime.setText(hour_show + ":" + minute_show);
                    wakeUpTime_database = hour_show + ":" + minute_show;
                }
            });
            if (wakeUpTime_database.length() == 0) {
                Bundle bundle = new Bundle();
                bundle.putInt("hour", 07);
                bundle.putInt("minute", 00);
                inputRelaxTimeFragment.setArguments(bundle);
                inputRelaxTimeFragment.show(getActivity().getFragmentManager(), "inputBirthdayDialogFragment");
            } else {
                String time[] = wakeUpTime_database.split(":");
                int hour = Integer.parseInt(time[0]);
                int minute = Integer.parseInt(time[1]);
                Bundle bundle = new Bundle();
                bundle.putInt("hour", hour);
                bundle.putInt("minute", minute);
                inputRelaxTimeFragment.setArguments(bundle);
                inputRelaxTimeFragment.show(getActivity().getFragmentManager(), "inputBirthdayDialogFragment");
            }
        }
    }

    //点击早餐监视器 尼见 2015-03-27
    class MyClickBreakfastListener implements View.OnClickListener {

        @Override
        public void onClick(View v) {
            InputRelaxTimeFragment inputRelaxTimeFragment = InputRelaxTimeFragment.newInstance(01, 01);
            inputRelaxTimeFragment.setConfirmInterface(new InputRelaxTimeFragment.ConfirmInterface() {

                //接口回调实现通信
                @Override
                public void onConfirmInterface(int hour, int minute) {
                    String minute_show = "00";
                    String hour_show = "00";
                    if (minute <= 9) {
                        minute_show = "0" + minute;
                    } else {
                        minute_show = Integer.toString(minute);
                    }
                    if (hour <= 9) {
                        hour_show = "0" + hour;
                    } else {
                        hour_show = Integer.toString(hour);
                    }
                    breakfastTime.setText(hour_show + ":" + minute_show);
                    breakfastTime_database = hour_show + ":" + minute_show;
                }
            });
            if (breakfastTime_database.length() == 0) {
                Bundle bundle = new Bundle();
                bundle.putInt("hour", 07);
                bundle.putInt("minute", 30);
                inputRelaxTimeFragment.setArguments(bundle);
                inputRelaxTimeFragment.show(getActivity().getFragmentManager(), "inputBirthdayDialogFragment");
            } else {
                String time[] = breakfastTime_database.split(":");
                int hour = Integer.parseInt(time[0]);
                int minute = Integer.parseInt(time[1]);
                Bundle bundle = new Bundle();
                bundle.putInt("hour", hour);
                bundle.putInt("minute", minute);
                inputRelaxTimeFragment.setArguments(bundle);
                inputRelaxTimeFragment.show(getActivity().getFragmentManager(), "inputBirthdayDialogFragment");
            }

        }
    }

    //点击午餐监视器 尼见 2015-03-27
    class MyClickLunchListener implements View.OnClickListener {

        @Override
        public void onClick(View v) {
            InputRelaxTimeFragment inputRelaxTimeFragment = InputRelaxTimeFragment.newInstance(01, 01);
            inputRelaxTimeFragment.setConfirmInterface(new InputRelaxTimeFragment.ConfirmInterface() {

                //接口回调实现通信
                @Override
                public void onConfirmInterface(int hour, int minute) {
                    String minute_show = "00";
                    String hour_show = "00";
                    if (minute <= 9) {
                        minute_show = "0" + minute;
                    } else {
                        minute_show = Integer.toString(minute);
                    }
                    if (hour <= 9) {
                        hour_show = "0" + hour;
                    } else {
                        hour_show = Integer.toString(hour);
                    }
                    lunchTime.setText(hour_show + ":" + minute_show);
                    lunchTime_database = hour_show + ":" + minute_show;
                }
            });
            if (lunchTime.length() == 0) {
                Bundle bundle = new Bundle();
                bundle.putInt("hour", 12);
                bundle.putInt("minute", 00);
                inputRelaxTimeFragment.setArguments(bundle);
                inputRelaxTimeFragment.show(getActivity().getFragmentManager(), "inputBirthdayDialogFragment");
            } else {
                String time[] = lunchTime_database.split(":");
                int hour = Integer.parseInt(time[0]);
                int minute = Integer.parseInt(time[1]);
                Bundle bundle = new Bundle();
                bundle.putInt("hour", hour);
                bundle.putInt("minute", minute);
                inputRelaxTimeFragment.setArguments(bundle);
                inputRelaxTimeFragment.show(getActivity().getFragmentManager(), "inputBirthdayDialogFragment");
            }
        }
    }

    //点击晚餐监视器 尼见 2015-03-27
    class MyClickDinnerListener implements View.OnClickListener {

        @Override
        public void onClick(View v) {
            InputRelaxTimeFragment inputRelaxTimeFragment = InputRelaxTimeFragment.newInstance(01, 01);
            inputRelaxTimeFragment.setConfirmInterface(new InputRelaxTimeFragment.ConfirmInterface() {

                //接口回调实现通信
                @Override
                public void onConfirmInterface(int hour, int minute) {
                    String minute_show = "00";
                    String hour_show = "00";
                    if (minute <= 9) {
                        minute_show = "0" + minute;
                    } else {
                        minute_show = Integer.toString(minute);
                    }
                    if (hour <= 9) {
                        hour_show = "0" + hour;
                    } else {
                        hour_show = Integer.toString(hour);
                    }
                    dinnerTime.setText(hour_show + ":" + minute_show);
                    dinnerTime_database = hour_show + ":" + minute_show;
                }
            });
            if (dinnerTime_database.length() == 0) {
                Bundle bundle = new Bundle();
                bundle.putInt("hour", 18);
                bundle.putInt("minute", 00);
                inputRelaxTimeFragment.setArguments(bundle);
                inputRelaxTimeFragment.show(getActivity().getFragmentManager(), "inputBirthdayDialogFragment");
            } else {
                String time[] = dinnerTime_database.split(":");
                int hour = Integer.parseInt(time[0]);
                int minute = Integer.parseInt(time[1]);
                Bundle bundle = new Bundle();
                bundle.putInt("hour", hour);
                bundle.putInt("minute", minute);
                inputRelaxTimeFragment.setArguments(bundle);
                inputRelaxTimeFragment.show(getActivity().getFragmentManager(), "inputBirthdayDialogFragment");
            }
        }
    }

    //点击睡觉监视器 尼见 2015-03-27
    class MyClickSleepListener implements View.OnClickListener {

        @Override
        public void onClick(View v) {
            InputRelaxTimeFragment inputRelaxTimeFragment = InputRelaxTimeFragment.newInstance(01, 01);
            inputRelaxTimeFragment.setConfirmInterface(new InputRelaxTimeFragment.ConfirmInterface() {

                //接口回调实现通信
                @Override
                public void onConfirmInterface(int hour, int minute) {
                    String minute_show = "00";
                    String hour_show = "00";
                    if (minute <= 9) {
                        minute_show = "0" + minute;
                    } else {
                        minute_show = Integer.toString(minute);
                    }
                    if (hour <= 9) {
                        hour_show = "0" + hour;
                    } else {
                        hour_show = Integer.toString(hour);
                    }
                    sleepTime.setText(hour_show + ":" + minute_show);
                    sleepTime_database = hour_show + ":" + minute_show;
                }
            });
            if (sleepTime_database.length() == 0) {
                Bundle bundle = new Bundle();
                bundle.putInt("hour", 22);
                bundle.putInt("minute", 00);
                inputRelaxTimeFragment.setArguments(bundle);
                inputRelaxTimeFragment.show(getActivity().getFragmentManager(), "inputBirthdayDialogFragment");
            } else {
                String time[] = sleepTime_database.split(":");
                int hour = Integer.parseInt(time[0]);
                int minute = Integer.parseInt(time[1]);
                Bundle bundle = new Bundle();
                bundle.putInt("hour", hour);
                bundle.putInt("minute", minute);
                inputRelaxTimeFragment.setArguments(bundle);
                inputRelaxTimeFragment.show(getActivity().getFragmentManager(), "inputBirthdayDialogFragment");
            }
        }
    }

}
